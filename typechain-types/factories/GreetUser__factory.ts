/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GreetUser, GreetUserInterface } from "../GreetUser";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "userName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "userRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserPublicDetailsByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_userName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_userName",
        type: "string",
      },
    ],
    name: "registerNewUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "uniqueUserName",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "userName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010bf380380620010bf8339810160408190526200003491620004cf565b600180546001600160a01b031916331790556200006d81600080546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600581526411dc99595d60da1b602082015262000094906200009b565b50620005ca565b6000815111620000f25760405162461bcd60e51b815260206004820152601960248201527f55736572206e616d652063616e6e6f7420626520656d7074790000000000000060448201526064015b60405180910390fd5b620001066200010062000376565b620003ac565b15620001675760405162461bcd60e51b815260206004820152602960248201527f54686973206164647265737320616c726561647920726567697374657265642060448201526830b99030903ab9b2b960b91b6064820152608401620000e9565b6200017281620003dd565b15620001c15760405162461bcd60e51b815260206004820152601760248201527f546869732075736572206e616d652069732074616b656e0000000000000000006044820152606401620000e9565b620001d860026200041c60201b620007711760201c565b620001ef60036200041c60201b620007711760201c565b60006200020860026200042560201b6200077a1760201c565b905060006040518060600160405280620002276200037660201b60201c565b6001600160a01b0316815260208101849052604001849052905080600460006200025062000376565b6001600160a01b0390811682526020808301939093526040918201600020845181546001600160a01b03191692169190911781558383015160018201559083015180519192620002a99260028501929091019062000429565b50839150600690506000620002bd62000376565b6001600160a01b03168152602081019190915260400160002055620002e162000376565b600584604051620002f39190620004ff565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790556200032c62000376565b6001600160a01b0316827fb30cc60f93b8828f270cfa8f16cadf384a31d959389fd960d7e5f2efb3c8fa478542604051620003699291906200051d565b60405180910390a3505050565b6000601436108015906200039457506000546001600160a01b031633145b15620003a7575060131936013560601c90565b503390565b6001600160a01b03811660009081526004602052604081206002018054620003d4906200058d565b15159392505050565b6000806001600160a01b0316600583604051620003fb9190620004ff565b908152604051908190036020019020546001600160a01b0316141592915050565b80546001019055565b5490565b82805462000437906200058d565b90600052602060002090601f0160209004810192826200045b5760008555620004a6565b82601f106200047657805160ff1916838001178555620004a6565b82800160010185558215620004a6579182015b82811115620004a657825182559160200191906001019062000489565b50620004b4929150620004b8565b5090565b5b80821115620004b45760008155600101620004b9565b600060208284031215620004e1578081fd5b81516001600160a01b0381168114620004f8578182fd5b9392505050565b60008251620005138184602087016200055a565b9190910192915050565b60408152600083518060408401526200053e8160608501602088016200055a565b602083019390935250601f91909101601f191601606001919050565b60005b83811015620005775781810151838201526020016200055d565b8381111562000587576000848401525b50505050565b600181811c90821680620005a257607f821691505b60208210811415620005c457634e487b7160e01b600052602260045260246000fd5b50919050565b610ae580620005da6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063ac174a1611610071578063ac174a16146101ab578063b5cb15f7146101cc578063c3c5a547146101e2578063c96679fe146101f5578063da74222814610215578063f851a4401461022857600080fd5b8063486ff0cd146100b9578063572b6c05146100e55780637c772eb2146101175780637da0a87714610163578063995ac4fd14610174578063a87430ba14610189575b600080fd5b60408051808201825260018152603160f81b602082015290516100dc91906109d8565b60405180910390f35b6101076100f3366004610888565b6000546001600160a01b0391821691161490565b60405190151581526020016100dc565b61014b6101253660046108b6565b80516020818301810180516005825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020016100dc565b6000546001600160a01b031661014b565b6101876101823660046108b6565b61023b565b005b61019c610197366004610888565b6104cf565b6040516100dc939291906109a8565b6101be6101b9366004610888565b610584565b6040516100dc929190610a0d565b6101d46106a5565b6040519081526020016100dc565b6101076101f0366004610888565b6106b5565b6101d4610203366004610888565b60066020526000908152604090205481565b610187610223366004610888565b6106e4565b60015461014b906001600160a01b031681565b60008151116102915760405162461bcd60e51b815260206004820152601960248201527f55736572206e616d652063616e6e6f7420626520656d7074790000000000000060448201526064015b60405180910390fd5b61029c6101f061077e565b156102fb5760405162461bcd60e51b815260206004820152602960248201527f54686973206164647265737320616c726561647920726567697374657265642060448201526830b99030903ab9b2b960b91b6064820152608401610288565b610304816107b2565b156103515760405162461bcd60e51b815260206004820152601760248201527f546869732075736572206e616d652069732074616b656e0000000000000000006044820152606401610288565b61035f600280546001019055565b61036d600380546001019055565b600061037860025490565b90506000604051806060016040528061038f61077e565b6001600160a01b0316815260200183815260200184815250905080600460006103b661077e565b6001600160a01b0390811682526020808301939093526040918201600020845181546001600160a01b0319169216919091178155838301516001820155908301518051919261040d926002850192909101906107ef565b50905050816006600061041e61077e565b6001600160a01b0316815260208101919091526040016000205561044061077e565b600584604051610450919061098c565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905561048761077e565b6001600160a01b0316827fb30cc60f93b8828f270cfa8f16cadf384a31d959389fd960d7e5f2efb3c8fa4785426040516104c29291906109eb565b60405180910390a3505050565b6004602052600090815260409020805460018201546002830180546001600160a01b0390931693919261050190610a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90610a5e565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b5050505050905083565b6001600160a01b0381166000908152600460205260408120600101546060906105ef5760405162461bcd60e51b815260206004820152601e60248201527f546869732061646472657373206973206e6f74207265676973746572656400006044820152606401610288565b6001600160a01b03831660009081526004602052604090206001810154600290910180549193509061062090610a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461064c90610a5e565b80156106995780601f1061066e57610100808354040283529160200191610699565b820191906000526020600020905b81548152906001019060200180831161067c57829003601f168201915b50505050509050915091565b60006106b060035490565b905090565b6001600160a01b038116600090815260046020526040812060020180546106db90610a5e565b15159392505050565b6106ec61077e565b6001546001600160a01b039081169116146107535760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608401610288565b600080546001600160a01b0319166001600160a01b03831617905550565b80546001019055565b5490565b60006014361080159061079b57506000546001600160a01b031633145b156107ad575060131936013560601c90565b503390565b6000806001600160a01b03166005836040516107ce919061098c565b908152604051908190036020019020546001600160a01b0316141592915050565b8280546107fb90610a5e565b90600052602060002090601f01602090048101928261081d5760008555610863565b82601f1061083657805160ff1916838001178555610863565b82800160010185558215610863579182015b82811115610863578251825591602001919060010190610848565b5061086f929150610873565b5090565b5b8082111561086f5760008155600101610874565b600060208284031215610899578081fd5b81356001600160a01b03811681146108af578182fd5b9392505050565b6000602082840312156108c7578081fd5b813567ffffffffffffffff808211156108de578283fd5b818401915084601f8301126108f1578283fd5b81358181111561090357610903610a99565b604051601f8201601f19908116603f0116810190838211818310171561092b5761092b610a99565b81604052828152876020848701011115610943578586fd5b826020860160208301379182016020019490945295945050505050565b60008151808452610978816020860160208601610a2e565b601f01601f19169290920160200192915050565b6000825161099e818460208701610a2e565b9190910192915050565b60018060a01b03841681528260208201526060604082015260006109cf6060830184610960565b95945050505050565b6020815260006108af6020830184610960565b6040815260006109fe6040830185610960565b90508260208301529392505050565b828152604060208201526000610a266040830184610960565b949350505050565b60005b83811015610a49578181015183820152602001610a31565b83811115610a58576000848401525b50505050565b600181811c90821680610a7257607f821691505b60208210811415610a9357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e25ffc960d3aef319c377a37fdedd05085525ca785a64fd4e8f7d1cb341821dd64736f6c63430008040033";

type GreetUserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreetUserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreetUser__factory extends ContractFactory {
  constructor(...args: GreetUserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GreetUser";
  }

  deploy(
    _trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GreetUser> {
    return super.deploy(
      _trustedForwarder,
      overrides || {}
    ) as Promise<GreetUser>;
  }
  getDeployTransaction(
    _trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_trustedForwarder, overrides || {});
  }
  attach(address: string): GreetUser {
    return super.attach(address) as GreetUser;
  }
  connect(signer: Signer): GreetUser__factory {
    return super.connect(signer) as GreetUser__factory;
  }
  static readonly contractName: "GreetUser";
  public readonly contractName: "GreetUser";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreetUserInterface {
    return new utils.Interface(_abi) as GreetUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GreetUser {
    return new Contract(address, _abi, signerOrProvider) as GreetUser;
  }
}
