/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EIP712Base, EIP712BaseInterface } from "../EIP712Base";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161027f38038061027f83398101604081905261002f9161016d565b6040518060800160405280604f8152602001610230604f913980519060200120828051906020012082805190602001203061006e6100c160201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c0016040516020818303038152906040528051906020012060008190555050506101e3565b4690565b600082601f8301126100d5578081fd5b81516001600160401b03808211156100ef576100ef6101cd565b604051601f8301601f19908116603f01168101908282118183101715610117576101176101cd565b81604052838152602092508683858801011115610132578485fd5b8491505b838210156101535785820183015181830184015290820190610136565b8382111561016357848385830101525b9695505050505050565b6000806040838503121561017f578182fd5b82516001600160401b0380821115610195578384fd5b6101a1868387016100c5565b935060208501519150808211156101b6578283fd5b506101c3858286016100c5565b9150509250929050565b634e487b7160e01b600052604160045260246000fd5b603f806101f16000396000f3fe6080604052600080fdfea26469706673582212200b5e6d20c823bcbe157f122155222e5b40233ef3e906272f8954f0cafaf8275764736f6c63430008040033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type EIP712BaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712BaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Base__factory extends ContractFactory {
  constructor(...args: EIP712BaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EIP712Base";
  }

  deploy(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EIP712Base> {
    return super.deploy(name, version, overrides || {}) as Promise<EIP712Base>;
  }
  getDeployTransaction(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  attach(address: string): EIP712Base {
    return super.attach(address) as EIP712Base;
  }
  connect(signer: Signer): EIP712Base__factory {
    return super.connect(signer) as EIP712Base__factory;
  }
  static readonly contractName: "EIP712Base";
  public readonly contractName: "EIP712Base";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712BaseInterface {
    return new utils.Interface(_abi) as EIP712BaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP712Base {
    return new Contract(address, _abi, signerOrProvider) as EIP712Base;
  }
}
