/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greet, GreetInterface } from "../Greet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_greetUserContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "GreetCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "greetCreators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greetUserContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setGreetUserContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023ba380380620023ba833981016040819052620000349162000183565b6040805160208101909152600081526200004e81620000a7565b50600580546001600160a01b0384166001600160a01b03199182161790915560068054909116331790556200009f81600380546001600160a01b0319166001600160a01b0392909216919091179055565b5050620001f7565b8051620000bc906002906020840190620000c0565b5050565b828054620000ce90620001ba565b90600052602060002090601f016020900481019282620000f257600085556200013d565b82601f106200010d57805160ff19168380011785556200013d565b828001600101855582156200013d579182015b828111156200013d57825182559160200191906001019062000120565b506200014b9291506200014f565b5090565b5b808211156200014b576000815560010162000150565b80516001600160a01b03811681146200017e57600080fd5b919050565b6000806040838503121562000196578182fd5b620001a18362000166565b9150620001b16020840162000166565b90509250929050565b600181811c90821680620001cf57607f821691505b60208210811415620001f157634e487b7160e01b600052602260045260246000fd5b50919050565b6121b380620002076000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806377097fc8116100b8578063dd7324a41161007c578063dd7324a4146102e5578063e985e9c5146102f8578063e98b641e14610334578063f242432a14610347578063f5298aca1461035a578063f851a4401461036d57600080fd5b806377097fc81461025e5780637da0a877146102715780637fb3d5a014610296578063a22cb465146102bf578063da742228146102d257600080fd5b8063486ff0cd116100ff578063486ff0cd146101d95780634e1273f4146101f6578063572b6c051461021657806357f7789e146102385780636b20c4541461024b57600080fd5b8062fdd58e1461013b57806301ffc9a7146101615780630e89341c1461018457806312d9f50a146101a45780632eb2c2d6146101c4575b600080fd5b61014e61014936600461199b565b610380565b6040519081526020015b60405180910390f35b61017461016f366004611add565b610417565b6040519015158152602001610158565b610197610192366004611b15565b610469565b6040516101589190611d8a565b61014e6101b2366004611b15565b60096020526000908152604090205481565b6101d76101d23660046117eb565b61050b565b005b6040805180820190915260018152603160f81b6020820152610197565b6102096102043660046119f6565b6105b4565b6040516101589190611d1a565b61017461022436600461179f565b6003546001600160a01b0391821691161490565b6101d7610246366004611ba4565b610716565b6101d76102593660046118f4565b6107d1565b61014e61026c366004611b2d565b61082b565b6003546001600160a01b03165b6040516001600160a01b039091168152602001610158565b61027e6102a4366004611b15565b6008602052600090815260409020546001600160a01b031681565b6101d76102cd366004611965565b610a37565b6101d76102e036600461179f565b610a4d565b6101d76102f336600461179f565b610a98565b6101746103063660046117b9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b60055461027e906001600160a01b031681565b6101d7610355366004611891565b610ae4565b6101d76103683660046119c4565b610b3b565b60065461027e906001600160a01b031681565b60006001600160a01b0383166103f15760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061044857506001600160e01b031982166303a24d0760e21b145b8061046357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600081815260076020526040902080546060919061048690612009565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290612009565b80156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b50505050509050919050565b610513610b90565b6001600160a01b0316856001600160a01b03161480610539575061053985610306610b90565b6105a05760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103e8565b6105ad8585858585610b9f565b5050505050565b606081518351146106195760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103e8565b6000835167ffffffffffffffff81111561064357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561066c578160200160208202803683370190505b50905060005b845181101561070e576106d385828151811061069e57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106106c657634e487b7160e01b600052603260045260246000fd5b6020026020010151610380565b8282815181106106f357634e487b7160e01b600052603260045260246000fd5b602090810291909101015261070781612071565b9050610672565b509392505050565b61071e610b90565b60008381526008602052604090205483906001600160a01b038381169116148061075557506006546001600160a01b038381169116145b6107b25760405162461bcd60e51b815260206004820152602860248201527f4f6e6c792063726561746f72206f722061646d696e2063616e206564697420746044820152671a194811dc99595d60c21b60648201526084016103e8565b600084815260076020908152604090912084516105ad928601906115f2565b6107d9610b90565b6001600160a01b0316836001600160a01b031614806107ff57506107ff83610306610b90565b61081b5760405162461bcd60e51b81526004016103e890611e29565b610826838383610d62565b505050565b6000610835610b90565b60055460405163c3c5a54760e01b81526001600160a01b0383811660048301529091169063c3c5a5479060240160206040518083038186803b15801561087a57600080fd5b505afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190611ac1565b6109125760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c79207265676973746572656420757365722063616e2063616c6c20746860448201526a34b990333ab731ba34b7b760a91b60648201526084016103e8565b610920600480546001019055565b600061092b60045490565b9050610935610b90565b6008600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506109ac8186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061071692505050565b6109ce6109b7610b90565b828860405180602001604052806000815250610f04565b600081815260096020526040902042908190556109e9610b90565b6001600160a01b031681837f813a41ca395a71b39ccf7bc42f7fab202bc0198fe8271e01d9dce7e7b6c7e5b98989604051610a25929190611d5b565b60405180910390a45095945050505050565b610a49610a42610b90565b8383611019565b5050565b6006546001600160a01b03163314610a775760405162461bcd60e51b81526004016103e890611f44565b600380546001600160a01b0319166001600160a01b03831617905550565b50565b6006546001600160a01b03163314610ac25760405162461bcd60e51b81526004016103e890611f44565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b610aec610b90565b6001600160a01b0316856001600160a01b03161480610b125750610b1285610306610b90565b610b2e5760405162461bcd60e51b81526004016103e890611e29565b6105ad85858585856110fa565b610b43610b90565b6001600160a01b0316836001600160a01b03161480610b695750610b6983610306610b90565b610b855760405162461bcd60e51b81526004016103e890611e29565b610826838383611222565b6000610b9a61132f565b905090565b8151835114610bc05760405162461bcd60e51b81526004016103e890611f85565b6001600160a01b038416610be65760405162461bcd60e51b81526004016103e890611e72565b6000610bf0610b90565b905060005b8451811015610cf4576000858281518110610c2057634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610c4c57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610c9c5760405162461bcd60e51b81526004016103e890611efa565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610cd9908490611ff1565b9250508190555050505080610ced90612071565b9050610bf5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d44929190611d2d565b60405180910390a4610d5a818787878787611364565b505050505050565b6001600160a01b038316610d885760405162461bcd60e51b81526004016103e890611eb7565b8051825114610da95760405162461bcd60e51b81526004016103e890611f85565b6000610db3610b90565b604080516020810190915260009052905060005b8351811015610ea5576000848281518110610df257634e487b7160e01b600052603260045260246000fd5b602002602001015190506000848381518110610e1e57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610e6e5760405162461bcd60e51b81526004016103e890611de5565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610e9d81612071565b915050610dc7565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ef6929190611d2d565b60405180910390a450505050565b6001600160a01b038416610f645760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103e8565b6000610f6e610b90565b9050610f8981600087610f80886114cf565b6105ad886114cf565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610fb9908490611ff1565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46105ad81600087878787611528565b816001600160a01b0316836001600160a01b0316141561108d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103e8565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166111205760405162461bcd60e51b81526004016103e890611e72565b600061112a610b90565b905061113b818787610f80886114cf565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561117c5760405162461bcd60e51b81526004016103e890611efa565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906111b9908490611ff1565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611219828888888888611528565b50505050505050565b6001600160a01b0383166112485760405162461bcd60e51b81526004016103e890611eb7565b6000611252610b90565b905061128381856000611264876114cf565b61126d876114cf565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b0388168452909152902054828110156112c45760405162461bcd60e51b81526004016103e890611de5565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60006014361080159061134c57506003546001600160a01b031633145b1561135e575060131936013560601c90565b50335b90565b6001600160a01b0384163b15610d5a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113a89089908990889088908890600401611c77565b602060405180830381600087803b1580156113c257600080fd5b505af19250505080156113f2575060408051601f3d908101601f191682019092526113ef91810190611af9565b60015b61149f576113fe6120b8565b806308c379a0141561143857506114136120cf565b8061141e575061143a565b8060405162461bcd60e51b81526004016103e89190611d8a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103e8565b6001600160e01b0319811663bc197c8160e01b146112195760405162461bcd60e51b81526004016103e890611d9d565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061151757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610d5a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061156c9089908990889088908890600401611cd5565b602060405180830381600087803b15801561158657600080fd5b505af19250505080156115b6575060408051601f3d908101601f191682019092526115b391810190611af9565b60015b6115c2576113fe6120b8565b6001600160e01b0319811663f23a6e6160e01b146112195760405162461bcd60e51b81526004016103e890611d9d565b8280546115fe90612009565b90600052602060002090601f0160209004810192826116205760008555611666565b82601f1061163957805160ff1916838001178555611666565b82800160010185558215611666579182015b8281111561166657825182559160200191906001019061164b565b50611672929150611676565b5090565b5b808211156116725760008155600101611677565b600067ffffffffffffffff8311156116a5576116a56120a2565b6040516116bc601f8501601f191660200182612044565b8091508381528484840111156116d157600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461170057600080fd5b919050565b600082601f830112611715578081fd5b8135602061172282611fcd565b60405161172f8282612044565b8381528281019150858301600585901b8701840188101561174e578586fd5b855b8581101561176c57813584529284019290840190600101611750565b5090979650505050505050565b600082601f830112611789578081fd5b6117988383356020850161168b565b9392505050565b6000602082840312156117b0578081fd5b611798826116e9565b600080604083850312156117cb578081fd5b6117d4836116e9565b91506117e2602084016116e9565b90509250929050565b600080600080600060a08688031215611802578081fd5b61180b866116e9565b9450611819602087016116e9565b9350604086013567ffffffffffffffff80821115611835578283fd5b61184189838a01611705565b94506060880135915080821115611856578283fd5b61186289838a01611705565b93506080880135915080821115611877578283fd5b5061188488828901611779565b9150509295509295909350565b600080600080600060a086880312156118a8578081fd5b6118b1866116e9565b94506118bf602087016116e9565b93506040860135925060608601359150608086013567ffffffffffffffff8111156118e8578182fd5b61188488828901611779565b600080600060608486031215611908578283fd5b611911846116e9565b9250602084013567ffffffffffffffff8082111561192d578384fd5b61193987838801611705565b9350604086013591508082111561194e578283fd5b5061195b86828701611705565b9150509250925092565b60008060408385031215611977578182fd5b611980836116e9565b9150602083013561199081612159565b809150509250929050565b600080604083850312156119ad578182fd5b6119b6836116e9565b946020939093013593505050565b6000806000606084860312156119d8578081fd5b6119e1846116e9565b95602085013595506040909401359392505050565b60008060408385031215611a08578182fd5b823567ffffffffffffffff80821115611a1f578384fd5b818501915085601f830112611a32578384fd5b81356020611a3f82611fcd565b604051611a4c8282612044565b8381528281019150858301600585901b870184018b1015611a6b578889fd5b8896505b84871015611a9457611a80816116e9565b835260019690960195918301918301611a6f565b5096505086013592505080821115611aaa578283fd5b50611ab785828601611705565b9150509250929050565b600060208284031215611ad2578081fd5b815161179881612159565b600060208284031215611aee578081fd5b813561179881612167565b600060208284031215611b0a578081fd5b815161179881612167565b600060208284031215611b26578081fd5b5035919050565b600080600060408486031215611b41578081fd5b83359250602084013567ffffffffffffffff80821115611b5f578283fd5b818601915086601f830112611b72578283fd5b813581811115611b80578384fd5b876020828501011115611b91578384fd5b6020830194508093505050509250925092565b60008060408385031215611bb6578182fd5b82359150602083013567ffffffffffffffff811115611bd3578182fd5b8301601f81018513611be3578182fd5b611ab78582356020840161168b565b6000815180845260208085019450808401835b83811015611c2157815187529582019590820190600101611c05565b509495945050505050565b60008151808452815b81811015611c5157602081850181015186830182015201611c35565b81811115611c625782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611ca390830186611bf2565b8281036060840152611cb58186611bf2565b90508281036080840152611cc98185611c2c565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611d0f90830184611c2c565b979650505050505050565b6020815260006117986020830184611bf2565b604081526000611d406040830185611bf2565b8281036020840152611d528185611bf2565b95945050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020815260006117986020830184611c2c565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526021908201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b600067ffffffffffffffff821115611fe757611fe76120a2565b5060051b60200190565b600082198211156120045761200461208c565b500190565b600181811c9082168061201d57607f821691505b6020821081141561203e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561206a5761206a6120a2565b6040525050565b60006000198214156120855761208561208c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561136157600481823e5160e01c90565b600060443d10156120dd5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561210d57505050505090565b82850191508151818111156121255750505050505090565b843d870101602082850101111561213f5750505050505090565b61214e60208286010187612044565b509095945050505050565b8015158114610a9557600080fd5b6001600160e01b031981168114610a9557600080fdfea264697066735822122043b1b8e4a4d5a4408121005f47df23a7778117dc7d243e6703eb744d6255adde64736f6c63430008040033";

type GreetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greet__factory extends ContractFactory {
  constructor(...args: GreetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Greet";
  }

  deploy(
    _greetUserContractAddress: string,
    _trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greet> {
    return super.deploy(
      _greetUserContractAddress,
      _trustedForwarder,
      overrides || {}
    ) as Promise<Greet>;
  }
  getDeployTransaction(
    _greetUserContractAddress: string,
    _trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _greetUserContractAddress,
      _trustedForwarder,
      overrides || {}
    );
  }
  attach(address: string): Greet {
    return super.attach(address) as Greet;
  }
  connect(signer: Signer): Greet__factory {
    return super.connect(signer) as Greet__factory;
  }
  static readonly contractName: "Greet";
  public readonly contractName: "Greet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreetInterface {
    return new utils.Interface(_abi) as GreetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Greet {
    return new Contract(address, _abi, signerOrProvider) as Greet;
  }
}
