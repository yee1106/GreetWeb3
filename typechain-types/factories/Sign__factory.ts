/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sign, SignInterface } from "../Sign";

const _abi = [
  {
    inputs: [],
    name: "_address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "recoverWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "recoverWithSig2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recoverWithSig3",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "recoverWithSig4",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b35806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318bad2171461005c57806325dd49f21461008b57806341d0fc65146100a0578063b52a3285146100b3578063dbcb9141146100c6575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e610099366004610906565b6100d9565b005b61009e6100ae3660046108d2565b610107565b61009e6100c136600461094b565b6101cc565b61009e6100d4366004610894565b6101fb565b6100e3828261023a565b600080546001600160a01b0319166001600160a01b03929092169190911790555050565b7f9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb6586101318161025e565b61014261013d826102a6565b61025e565b600161014d826102a6565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0015b6020604051602081039080840390855afa15801561019c573d6000803e3d6000fd5b5050604051601f190151600080546001600160a01b0319166001600160a01b039092169190911790555050505050565b60006101ef604051806080016040528060428152602001610abe604291396102fa565b90506100e3818361023a565b6102048461025e565b60408051600081526020810180835286905260ff831691810191909152606081018490526080810183905260019060a00161017a565b60008060006102498585610318565b9150915061025681610388565b509392505050565b6102a38160405160240161027491815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b17905261058e565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c015b604051602081830303815290604052805190602001209050919050565b600061030682516105af565b826040516020016102dd92919061097e565b60008082516041141561034f5760208301516040840151606085015160001a610343878285856106d1565b94509450505050610381565b825160401415610379576020830151604084015161036e8683836107be565b935093505050610381565b506000905060025b9250929050565b60008160048111156103aa57634e487b7160e01b600052602160045260246000fd5b14156103b35750565b60018160048111156103d557634e487b7160e01b600052602160045260246000fd5b14156104285760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b600281600481111561044a57634e487b7160e01b600052602160045260246000fd5b14156104985760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161041f565b60038160048111156104ba57634e487b7160e01b600052602160045260246000fd5b14156105135760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161041f565b600481600481111561053557634e487b7160e01b600052602160045260246000fd5b14156102a35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161041f565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060816105d35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156105fd57806105e781610a4c565b91506105f69050600a836109f1565b91506105d7565b60008167ffffffffffffffff81111561062657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610650576020820181803683370190505b5090505b84156106c957610665600183610a05565b9150610672600a86610a67565b61067d9060306109d9565b60f81b8183815181106106a057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506106c2600a866109f1565b9450610654565b949350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561070857506000905060036107b5565b8460ff16601b1415801561072057508460ff16601c14155b1561073157506000905060046107b5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610785573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107ae576000600192509250506107b5565b9150600090505b94509492505050565b6000806001600160ff1b038316816107db60ff86901c601b6109d9565b90506107e9878288856106d1565b935093505050935093915050565b600082601f830112610807578081fd5b813567ffffffffffffffff8082111561082257610822610aa7565b604051601f8301601f19908116603f0116810190828211818310171561084a5761084a610aa7565b81604052838152866020858801011115610862578485fd5b8360208701602083013792830160200193909352509392505050565b803560ff8116811461088f57600080fd5b919050565b600080600080608085870312156108a9578384fd5b8435935060208501359250604085013591506108c76060860161087e565b905092959194509250565b6000806000606084860312156108e6578283fd5b83359250602084013591506108fd6040850161087e565b90509250925092565b60008060408385031215610918578182fd5b82359150602083013567ffffffffffffffff811115610935578182fd5b610941858286016107f7565b9150509250929050565b60006020828403121561095c578081fd5b813567ffffffffffffffff811115610972578182fd5b6106c9848285016107f7565b7f19457468657265756d205369676e6564204d6573736167653a0a0000000000008152600083516109b681601a850160208801610a1c565b8351908301906109cd81601a840160208801610a1c565b01601a01949350505050565b600082198211156109ec576109ec610a7b565b500190565b600082610a0057610a00610a91565b500490565b600082821015610a1757610a17610a7b565b500390565b60005b83811015610a37578181015183820152602001610a1f565b83811115610a46576000848401525b50505050565b6000600019821415610a6057610a60610a7b565b5060010190565b600082610a7657610a76610a91565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe307839633232666635663231663062383162313133653633663764623664613934666564656631316232313139623430383862383936363466623961336362363538a264697066735822122041103b428272611df8928236201159a07cd399e76f3f98c2f4aeba373c220cb264736f6c63430008040033";

type SignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sign__factory extends ContractFactory {
  constructor(...args: SignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Sign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sign> {
    return super.deploy(overrides || {}) as Promise<Sign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Sign {
    return super.attach(address) as Sign;
  }
  connect(signer: Signer): Sign__factory {
    return super.connect(signer) as Sign__factory;
  }
  static readonly contractName: "Sign";
  public readonly contractName: "Sign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignInterface {
    return new utils.Interface(_abi) as SignInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sign {
    return new Contract(address, _abi, signerOrProvider) as Sign;
  }
}
